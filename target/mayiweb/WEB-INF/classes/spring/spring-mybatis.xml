<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd ">
    <!-- 加载db.properties文件 -->
	<context:property-placeholder location="classpath:mybatis/db.properties" />
	
	<!--&lt;!&ndash; 配置数据源 ,Druid &ndash;&gt;-->
	<!--<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
		<!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
		<!--<property name="url" value="${jdbc.url}" />-->
		<!--<property name="username" value="${jdbc.username}" />-->
		<!--<property name="password" value="${jdbc.password}" />-->
		<!--<property name="driverClassName" value ="${jdbc.driver}" />-->
		<!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
		<!--<property name="initialSize" value="1" />-->
		<!--<property name="minIdle" value="1" />-->
		<!--<property name="maxActive" value="20" />-->
		<!--&lt;!&ndash; 获取连接等待超时的时间 &ndash;&gt;-->
		<!--<property name="maxWait" value="10000" />-->
		<!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
		<!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->
		<!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
		<!--<property name="minEvictableIdleTimeMillis" value="300000" />-->
		<!--&lt;!&ndash; 测试连接配置 &ndash;&gt;-->
		<!--<property name="testWhileIdle" value="true" />-->
		<!--&lt;!&ndash; 这里建议配置为TRUE，防止取到的连接不可用 &ndash;&gt;-->
		<!--<property name="testOnBorrow" value="true" />-->
		<!--<property name="testOnReturn" value="false" />-->
		<!--&lt;!&ndash; 验证连接有效与否的SQL，不同的数据配置不同 &ndash;&gt;-->
		<!--<property name="validationQuery" value="SELECT 'x'" />-->
		<!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 。  如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 &ndash;&gt;-->
		<!--&lt;!&ndash; -->
		<!--<property name="poolPreparedStatements" value="false" />-->
		<!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />-->
		  <!--&ndash;&gt;-->
		<!--&lt;!&ndash; 超过时间限制是否回收 &ndash;&gt;-->
		<!--<property name="removeAbandoned" value="true" />-->
		<!--&lt;!&ndash; 1800秒,也就是30分钟 &ndash;&gt;-->
		<!--<property name="removeAbandonedTimeout" value="1800" />-->
		<!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
		<!--<property name="logAbandoned" value="true" />-->
		<!--&lt;!&ndash; 监控数据库 &ndash;&gt;-->
		<!--<property name="filters" value="stat" />-->
	<!--</bean>-->
	<!---->
	<!--&lt;!&ndash; 配置sqlSessionFactory &ndash;&gt;-->
	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
		<!--<property name="dataSource" ref="dataSource" />-->
		<!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />-->
		<!--<property name="mapperLocations" value="classpath:mapper/*/*Mapper.xml" />-->
	<!--</bean>-->
	<!---->
	<!--&lt;!&ndash; mapper扫描器 &ndash;&gt;-->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
		<!--&lt;!&ndash; 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 &ndash;&gt;-->
		<!--<property name="basePackage" value="com.wf.ew.*.dao" />-->
		<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
	<!--</bean>-->
	<!---->
	<!--&lt;!&ndash; spring管理事务 &ndash;&gt;-->
	<!--<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource" />-->
	<!--</bean>-->
	<!--&lt;!&ndash; spring的声明式事务管理 &ndash;&gt;-->
	<!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
		<!--<tx:attributes>-->
			<!--<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />-->
			<!--<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />-->
			<!--<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />-->
			<!--<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />-->
			<!--<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />-->
			<!--<tx:method name="select*" propagation="SUPPORTS" read-only="true" />-->
			<!--<tx:method name="get*" propagation="SUPPORTS" read-only="true" />-->
			<!--<tx:method name="find*" propagation="SUPPORTS" read-only="true" />-->
			<!--<tx:method name="list*" propagation="SUPPORTS" read-only="true" />-->
		<!--</tx:attributes>-->
	<!--</tx:advice>-->
	<!--&lt;!&ndash; 声明切入点 &ndash;&gt;-->
	<!--<aop:config>-->
		<!--<aop:pointcut id="txPointCuts" expression="execution(* com.wf.ew.*.service.impl.*.*(..))" />-->
		<!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCuts" />-->
	<!--</aop:config>-->
	<!---->
	<!--&lt;!&ndash; 配置druid监控spring jdbc &ndash;&gt;-->
	<!--<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">-->
	<!--</bean>-->
	<!--<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">-->
		<!--<property name="patterns">-->
			<!--<list>-->
				<!--<value>com.wf.ew.*.service.*</value>-->
			<!--</list>-->
		<!--</property>-->
	<!--</bean>-->
	<!--<aop:config>-->
		<!--<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />-->
	<!--</aop:config>-->
</beans>